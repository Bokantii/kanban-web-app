{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport Boards from \"./components/Board/Board\";\nimport { useState, useRef } from \"react\";\nimport Modal from \"./components/Modal/Modal\";\nimport { ModalContext } from \"./store/modal-context\";\nimport { useContext } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [enteredBoardName, setEnteredBoardName] = useState(\"\");\n  const [enteredTaskName, setEnteredTaskName] = useState(\"\");\n  // const [modalIsOpen, setModalIsOpen] = useState(false);\n  // const [newBoardCreated, setNewBoardCreated] = useState(false);\n  // const [newTaskCreated, setNewTaskCreated] = useState(false);\n  const boardName = useRef();\n  const boardInput = /*#__PURE__*/_jsxDEV(\"input\", {\n    ref: boardName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 22\n  }, this);\n  const addBoard = /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"addBoard\",\n    onClick: handleClick,\n    children: \"Create New Board\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n  const boardTitle = enteredBoardName !== null && enteredBoardName !== void 0 ? enteredBoardName : \"\";\n  const modalCtx = useContext(ModalContext);\n  function handleClick() {\n    setEnteredBoardName(boardName.current.value);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n      value: modalCtx,\n      children: /*#__PURE__*/_jsxDEV(Boards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"1r+7o9G0vnowX/MzIGlfQxOgIr4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Boards","useState","useRef","Modal","ModalContext","useContext","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","enteredBoardName","setEnteredBoardName","enteredTaskName","setEnteredTaskName","boardName","boardInput","ref","fileName","_jsxFileName","lineNumber","columnNumber","addBoard","className","onClick","handleClick","children","boardTitle","modalCtx","current","value","Provider","_c","$RefreshReg$"],"sources":["/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/frontend/src/App.js"],"sourcesContent":["import Boards from \"./components/Board/Board\";\nimport { useState, useRef } from \"react\";\nimport Modal from \"./components/Modal/Modal\";\nimport { ModalContext } from \"./store/modal-context\";\nimport { useContext } from \"react\";\nfunction App() {\n  const [enteredBoardName, setEnteredBoardName] = useState(\"\");\n  const [enteredTaskName, setEnteredTaskName] = useState(\"\");\n  // const [modalIsOpen, setModalIsOpen] = useState(false);\n  // const [newBoardCreated, setNewBoardCreated] = useState(false);\n  // const [newTaskCreated, setNewTaskCreated] = useState(false);\n  const boardName = useRef();\n  const boardInput = <input ref={boardName} />;\n  const addBoard = (\n    <button className=\"addBoard\" onClick={handleClick}>\n      Create New Board\n    </button>\n  );\n \n  const boardTitle = enteredBoardName ?? \"\";\n  const modalCtx = useContext(ModalContext);\n\n  function handleClick() {\n    setEnteredBoardName(boardName.current.value);\n  }\n\n  return (\n    <>\n      <ModalContext.Provider value={modalCtx}>\n        <Boards />\n      </ModalContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,0BAA0B;AAC7C,SAASC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACnC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1D;EACA;EACA;EACA,MAAMe,SAAS,GAAGd,MAAM,CAAC,CAAC;EAC1B,MAAMe,UAAU,gBAAGV,OAAA;IAAOW,GAAG,EAAEF;EAAU;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC5C,MAAMC,QAAQ,gBACZhB,OAAA;IAAQiB,SAAS,EAAC,UAAU;IAACC,OAAO,EAAEC,WAAY;IAAAC,QAAA,EAAC;EAEnD;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CACT;EAED,MAAMM,UAAU,GAAGhB,gBAAgB,aAAhBA,gBAAgB,cAAhBA,gBAAgB,GAAI,EAAE;EACzC,MAAMiB,QAAQ,GAAGxB,UAAU,CAACD,YAAY,CAAC;EAEzC,SAASsB,WAAWA,CAAA,EAAG;IACrBb,mBAAmB,CAACG,SAAS,CAACc,OAAO,CAACC,KAAK,CAAC;EAC9C;EAEA,oBACExB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACEpB,OAAA,CAACH,YAAY,CAAC4B,QAAQ;MAACD,KAAK,EAAEF,QAAS;MAAAF,QAAA,eACrCpB,OAAA,CAACP,MAAM;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW;EAAC,gBACxB,CAAC;AAEP;AAACX,EAAA,CA5BQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}