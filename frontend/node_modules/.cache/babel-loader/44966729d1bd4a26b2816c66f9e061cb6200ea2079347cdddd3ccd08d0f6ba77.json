{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/frontend/src/components/BoardTitle/BoardTitle.jsx\";\nimport React from \"react\";\nimport classes from \"./BoardTitle.module.scss\";\nimport IconBoard from \"../Icons/IconBoard\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardTitle = ({\n  title,\n  isSelected,\n  onSelect\n}) => {\n  let iconBoardColor = boardIsSelected ? \"#f4f7fd\" : \"#828FA3\";\n  const className = boardIsSelected ? `${classes.board} ${classes.board_selected}` : classes.board;\n  function selectBoard() {\n    setBoardIsSelected(true);\n  }\n  function changeIconColor() {\n    iconBoardColor = \"#828FA3\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: className,\n    onClick: onSelect,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.boardItem,\n      children: [/*#__PURE__*/_jsxDEV(IconBoard, {\n        fill: iconBoardColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = BoardTitle;\nexport default BoardTitle;\nvar _c;\n$RefreshReg$(_c, \"BoardTitle\");","map":{"version":3,"names":["React","classes","IconBoard","useState","jsxDEV","_jsxDEV","BoardTitle","title","isSelected","onSelect","iconBoardColor","boardIsSelected","className","board","board_selected","selectBoard","setBoardIsSelected","changeIconColor","onClick","children","boardItem","fill","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/frontend/src/components/BoardTitle/BoardTitle.jsx"],"sourcesContent":["import React from \"react\";\nimport classes from \"./BoardTitle.module.scss\";\nimport IconBoard from \"../Icons/IconBoard\";\nimport { useState } from \"react\";\nconst BoardTitle = ({ title,isSelected,onSelect}) => {\n  \n  let iconBoardColor = boardIsSelected ? \"#f4f7fd\" :\"#828FA3\";\n  const className = boardIsSelected\n    ? `${classes.board} ${classes.board_selected}`\n    : classes.board;\n  function selectBoard() {\n    setBoardIsSelected(true);\n  }\n  function changeIconColor(){\n    iconBoardColor=\"#828FA3\"\n  }\n  return (\n    <li className={className} onClick={onSelect}>\n      <span className={classes.boardItem}>\n        <IconBoard fill={iconBoardColor} />\n        <span>{title}</span>\n      </span>\n    </li>\n  );\n};\n\nexport default BoardTitle;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAACC,UAAU;EAACC;AAAQ,CAAC,KAAK;EAEnD,IAAIC,cAAc,GAAGC,eAAe,GAAG,SAAS,GAAE,SAAS;EAC3D,MAAMC,SAAS,GAAGD,eAAe,GAC7B,GAAGV,OAAO,CAACY,KAAK,IAAIZ,OAAO,CAACa,cAAc,EAAE,GAC5Cb,OAAO,CAACY,KAAK;EACjB,SAASE,WAAWA,CAAA,EAAG;IACrBC,kBAAkB,CAAC,IAAI,CAAC;EAC1B;EACA,SAASC,eAAeA,CAAA,EAAE;IACxBP,cAAc,GAAC,SAAS;EAC1B;EACA,oBACEL,OAAA;IAAIO,SAAS,EAAEA,SAAU;IAACM,OAAO,EAAET,QAAS;IAAAU,QAAA,eAC1Cd,OAAA;MAAMO,SAAS,EAAEX,OAAO,CAACmB,SAAU;MAAAD,QAAA,gBACjCd,OAAA,CAACH,SAAS;QAACmB,IAAI,EAAEX;MAAe;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnCpB,OAAA;QAAAc,QAAA,EAAOZ;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAET,CAAC;AAACC,EAAA,GApBIpB,UAAU;AAsBhB,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}