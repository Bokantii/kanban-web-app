{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport Board from \"./components/Home/Home\";\nimport { useState, useRef } from \"react\";\nimport Modal from \"./components/Modal/Modal\";\nimport { ModalContext } from \"./store/modal-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [enteredBoardName, setEnteredBoardName] = useState(\"\");\n  const [enteredTaskName, setEnteredTaskName] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  // const [newBoardCreated, setNewBoardCreated] = useState(false);\n  // const [newTaskCreated, setNewTaskCreated] = useState(false);\n  const boardName = useRef();\n  const boardInput = /*#__PURE__*/_jsxDEV(\"input\", {\n    ref: boardName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 22\n  }, this);\n  const addBoard = /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"addBoard\",\n    onClick: handleClick,\n    children: \"Create New Board\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n  // const boardTitle = newBoardCreated ? enteredBoardName : \"\";\n  // const boardTitle = enteredBoardName ? enteredBoardName : \"\";\n  const boardTitle = enteredBoardName !== null && enteredBoardName !== void 0 ? enteredBoardName : \"\";\n\n  // function handleChange(event) {\n  //   // setNewTaskCreated(false);\n  //   setEnteredBoardName(event.target.value);\n  // }\n  function handleClick() {\n    setEnteredBoardName(boardName.current.value);\n  }\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: mod,\n    children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yYZxnpDUlwsL2cSwn85Bn2oGmgg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Board","useState","useRef","Modal","ModalContext","jsxDEV","_jsxDEV","App","_s","enteredBoardName","setEnteredBoardName","enteredTaskName","setEnteredTaskName","modalIsOpen","setModalIsOpen","boardName","boardInput","ref","fileName","_jsxFileName","lineNumber","columnNumber","addBoard","className","onClick","handleClick","children","boardTitle","current","value","Provider","mod","_c","$RefreshReg$"],"sources":["/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/frontend/src/App.js"],"sourcesContent":["import Board from \"./components/Home/Home\";\nimport { useState, useRef } from \"react\";\nimport Modal from \"./components/Modal/Modal\";\nimport { ModalContext } from \"./store/modal-context\";\nfunction App() {\n  const [enteredBoardName, setEnteredBoardName] = useState(\"\");\n  const [enteredTaskName, setEnteredTaskName] = useState(\"\");\n  const [modalIsOpen,setModalIsOpen] = useState(false)\n  // const [newBoardCreated, setNewBoardCreated] = useState(false);\n  // const [newTaskCreated, setNewTaskCreated] = useState(false);\n  const boardName = useRef();\n  const boardInput = <input ref={boardName} />;\n  const addBoard = (\n    <button className=\"addBoard\" onClick={handleClick}>\n      Create New Board\n    </button>\n  );\n  // const boardTitle = newBoardCreated ? enteredBoardName : \"\";\n  // const boardTitle = enteredBoardName ? enteredBoardName : \"\";\n  const boardTitle = enteredBoardName ?? \"\";\n\n  // function handleChange(event) {\n  //   // setNewTaskCreated(false);\n  //   setEnteredBoardName(event.target.value);\n  // }\n  function handleClick() {\n    setEnteredBoardName(boardName.current.value);\n  }\n  return (\n    <ModalContext.Provider value={mod}>\n      <Board />\n    </ModalContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,wBAAwB;AAC1C,SAASC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,SAASC,YAAY,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACrD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACY,WAAW,EAACC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACpD;EACA;EACA,MAAMc,SAAS,GAAGb,MAAM,CAAC,CAAC;EAC1B,MAAMc,UAAU,gBAAGV,OAAA;IAAOW,GAAG,EAAEF;EAAU;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC5C,MAAMC,QAAQ,gBACZhB,OAAA;IAAQiB,SAAS,EAAC,UAAU;IAACC,OAAO,EAAEC,WAAY;IAAAC,QAAA,EAAC;EAEnD;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CACT;EACD;EACA;EACA,MAAMM,UAAU,GAAGlB,gBAAgB,aAAhBA,gBAAgB,cAAhBA,gBAAgB,GAAI,EAAE;;EAEzC;EACA;EACA;EACA;EACA,SAASgB,WAAWA,CAAA,EAAG;IACrBf,mBAAmB,CAACK,SAAS,CAACa,OAAO,CAACC,KAAK,CAAC;EAC9C;EACA,oBACEvB,OAAA,CAACF,YAAY,CAAC0B,QAAQ;IAACD,KAAK,EAAEE,GAAI;IAAAL,QAAA,eAChCpB,OAAA,CAACN,KAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B;AAACb,EAAA,CA7BQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}